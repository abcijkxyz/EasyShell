{
  "name": "EasyShell",
  "tagline": "This Eclipse plugin allows to open a shell window or file manager from the popup menu in the navigation tree or editor view. Additionally it is possible to run selected file in the shell, copy file or directory path or run user defined external tools. Key shortcuts and multiple selections are also supported!",
  "body": "# EasyShell [![Build Status](https://travis-ci.org/anb0s/EasyShell.svg)](https://travis-ci.org/anb0s/EasyShell) [![Download EasyShell](https://img.shields.io/sourceforge/dt/pluginbox.svg)](https://sourceforge.net/projects/pluginbox/files/latest/download)\r\nThis Eclipse plugin allows to open a shell window or file manager from the popup menu in the navigation tree or editor view. Additionally it is possible to run selected file in the shell, copy file or directory path or run user defined external tools. Key shortcuts and multiple selections are also supported!\r\n\r\nInstallation:\r\n-------------\r\nUse update site: http://anb0s.github.io/EasyShell\r\n\r\nOR\r\n\r\nEclipse Markeplace: http://marketplace.eclipse.org/content/easyshell\r\n\r\nOR\r\n\r\n[Download EasyShell] (https://sourceforge.net/projects/pluginbox/files/latest/download), extract it to \"eclipse\\dropin\" folder and restart.\r\n\r\nFeatures:\r\n---------\r\n\r\nThe plugin is platform independent in principal. It just launches a (configurable) system command to open the shell, file explorer or other user defined command. It also copies path etc. to clipboard. Just open context menu for an Eclipse editor or selected resource in some view:\r\n\r\n![context_menu_windows](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_context_menu_windows.png \"Context Menu @ Windows\")\r\n\r\nKeyboard-shortcuts:\r\n-------------------\r\n\r\n**Alt + E**: Main popup menu (Windows)\r\n\r\n![popup_menu_windows](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_popup_menu_windows.png \"Popup Menu @ Windows (Alt+E)\")\r\n\r\n**Alt + Shift + E**: execute multiple commands for selection(s)\r\n\r\n![multi_selection_dialog_windows](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_multi-selection_dialog_windows.png \"Dialog for multiple tool selection @ Windows (Alt+Shift+E)\")\r\n\r\nShortcuts that executes the command directly if only one defined or opens a popup menu like Alt + E reduced for category:\r\n\r\n**Alt + O**: Open Here (shell)\r\n\r\n**Alt + R**: Run with (shell)\r\n\r\n**Alt + X**: Explore\r\n\r\n**Alt + C**: Copy to Clipboard\r\n\r\n**Alt + U**: User defined category\r\n\r\nSpecial not available for all OS:\r\n\r\n**Alt + D**: Open with Default application\r\n\r\nSupported OS and commands:\r\n--------------------------\r\n\r\nThe following platform, shell combinations and tools are supported as selections available in the preferences page. The user can define own commands and menues or just adapt the predefined ones!\r\n\r\nWindows:\r\n- Command prompt (known as DOS shell or cmd.exe)\r\n- PowerShell\r\n- Bash (Cygwin, Git for Windows, etc.)\r\n  http://cygwin.com, https://git-for-windows.github.io\r\n- Console\r\n  https://sourceforge.net/projects/console\r\n- ConEmu \r\n  https://code.google.com/p/conemu-maximus5/\r\n- Cmder\r\n  https://github.com/cmderdev/cmder\r\n- Explorer\r\n- TotalCommander\r\n  http://www.ghisler.com  \r\n\r\nIf path to your tool is not added to PATH variable, please add it or adapt the command in EasyShell!\r\n\r\nUnix (BSD, Mac OS X) or Linux:\r\n- XDG Open\r\n- KDE Konsole\r\n- Konqueror\r\n- Gnome Terminal\r\n- Xfce Terminal\r\n- Sakura Terminal\r\n- ROXTerm\r\n- Pantheon Terminal\r\n- Dolphin\r\n- Nautilus\r\n- Nemo\r\n- Thunar\r\n- Pantheon\r\n- PCManFM\r\n\r\nMAC OS X\r\n - Terminal\r\n - Finder\r\n\r\nCopy to clipboard\r\n - Full Path\r\n - Full Path Unix (@Windows)\r\n - Qualified Name\r\n - ... more configurable...\r\n\r\nPreferences:\r\n------------\r\n\r\n![preferences_menu](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_preferences_menu.png \"Preferences - Menu\")\r\n\r\n![preferences_menu_new](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_preferences_menu_new.png \"Preferences - Menu 'New'\")\r\n\r\n![preferences_menu_new_content_assist](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_preferences_menu_new_content_assist.png \"Preferences - Menu 'New' with content assist\")\r\n\r\nBut you can configure any shell or command you like as long as you can figure out how to run a command to open the shell with given\r\nparameters or execute the tool you want.\r\n\r\n![preferences_command](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_preferences_command.png \"Preferences - Command\")\r\n\r\n![preferences_command_new_content_assist](https://raw.githubusercontent.com/anb0s/EasyShell/master/site/images/EasyShell_2.0_preferences_command_new.png \"Preferences - Command 'New' with content assist\")\r\n\r\nThe following substitution variables are available for building the command:\r\n\r\n- ${easyshell:resource_loc} = absolute path of file or directory\r\n- ${easyshell:resource_name} = name of file or directory\r\n- ${easyshell:resource_basename} = name of file without extension\r\n- ${easyshell:resource_extension} = extension of file name (without '.')\r\n- ${easyshell:resource_path} = relative path to workspace of file or directory\r\n- ${easyshell:container_loc} = absolute path of file directory or directory itself\r\n- ${easyshell:container_name} = name of file directory or directory itself\r\n- ${easyshell:container_path} = relative path to workspace of file directory or directory itself\r\n- ${easyshell:project_loc} = absolute path of project\r\n- ${easyshell:project_name} = name of project\r\n- ${easyshell:project_path} = relative path to workspace of project\r\n- ${easyshell:windows_drive} = drive letter of file or directory on Windows\r\n- ${easyshell:qualified_name} = full qualified (class) name\r\n- ${easyshell:line_separator} = line separator, e.g. '\\\\n' (Unix) or '\\\\r\\\\n' (Windows)\r\n- ${easyshell:path_separator} = path separator, e.g. ':' (Unix) or ';' (Windows)\r\n- ${easyshell:file_separator} = file separator, e.g. '/' (Unix) or '\\\\' (Windows)\r\n- and all other available variables in Eclipse\r\n\r\nLicense:\r\n--------\r\nhttps://eclipse.org/org/documents/epl-v10.html\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}